{"version":3,"sources":["Context.js","components/employees/Employee.js","components/employees/Employees.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/employees/AddEmployee.js","components/employees/EditEmployee.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","employees","filter","employee","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","_this2","wrap","_context","prev","next","axios","get","then","resp","console","log","data","sent","stop","react_default","createElement","props","children","Component","Consumer","Employee","showEmployeeInfo","onShowClick","e","onDeleteClick","delete","className","firstName","lastName","onClick","bind","react_router_dom","to","style","cursor","float","color","marginRight","email","phone","salary","Employees","Fragment","employees_Employee","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","name","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddEmployee","errors","defineProperty","target","onSubmit","preventDefault","_this$state","newEmployee","post","history","push","_this$state2","layout_TextInputGroup","EditEmployee","updateEmployee","abrupt","match","params","put","window","location","reload","_this3","NotFound","App","Context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uYAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GAEtB,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAEFH,EAFL,CAGEK,UAAWL,EAAMK,UAAUC,OACzB,SAAAC,GAAQ,OAAIA,EAASC,KAAOP,EAAOQ,YAGzC,IAAK,eACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GAEFH,EAFL,CAGEK,UAAS,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,cAEzC,IAAK,gBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAGFH,EAHL,CAIEK,UAAWL,EAAMK,UAAUO,IAAI,SAAAL,GAAQ,OACrCA,EAASC,KAAOP,EAAOQ,QAAQD,GAC1BD,EAAWN,EAAOQ,QACnBF,MAIV,QACE,OAAOP,IAIAa,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAb,OAAAsB,EAAA,EAAAtB,CAAAe,MAAAH,EAAAZ,OAAAuB,EAAA,EAAAvB,CAAAU,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAR,OAAAY,MACEtB,MAAQ,CACNK,UAAW,GACXwB,SAAU,SAAA5B,GAAM,OAAIe,EAAKc,SAAS,SAAA9B,GAAK,OAAID,EAAQC,EAAOC,OAH9De,EAAA,OAAAb,OAAA4B,EAAA,EAAA5B,CAAAU,EAAAC,GAAAX,OAAA6B,EAAA,EAAA7B,CAAAU,EAAA,EAAAoB,IAAA,oBAAAC,MAAA,eAAAC,EAAAhC,OAAAiC,EAAA,EAAAjC,CAAAkC,EAAAC,EAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAAvB,KAAA,OAAAmB,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAOuBC,IAChBC,IAAI,mCACJC,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAKG,MACjBX,EAAKX,SAAS,CACZzB,UAAW4C,EAAKG,SAZ1B,OAAAT,EAAAU,KAAA,wBAAAV,EAAAW,SAAAd,MAAA,yBAAAL,EAAAP,MAAAV,KAAAE,YAAA,KAAAa,IAAA,SAAAC,MAAA,WAkBI,OACEqB,EAAAjB,EAAAkB,cAAC5D,EAAQiB,SAAT,CAAkBqB,MAAOhB,KAAKlB,OAC3BkB,KAAKuC,MAAMC,cApBpB7C,EAAA,CAA8B8C,aA0BjBC,EAAWhE,EAAQgE,SCuBjBC,6MA5Eb7D,MAAQ,CACN8D,kBAAkB,KAGpBC,YAAc,SAAAC,GAEZhD,EAAKc,SAAS,CACZgC,kBAAmB9C,EAAKhB,MAAM8D,sBAIlCG,oDAAgB,SAAAzB,EAAOhC,EAAIqB,GAAX,OAAAQ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGRC,IAAMoB,OAAN,mCAAAxD,OAAgDF,IAAMwC,KAAK,SAAAC,GAC/DC,QAAQC,IAAIF,GACZpB,EAAS,CAAE3B,KAAM,kBAAmBO,QAASD,MALjC,wBAAAmC,EAAAW,SAAAd,sIASP,IAAAC,EAAAvB,KACPgC,QAAQC,IAAIjC,KAAKuC,OADV,IAGClD,EAAaW,KAAKuC,MAAlBlD,SACAuD,EAAqB5C,KAAKlB,MAA1B8D,iBAER,OACEP,EAAAjB,EAAAkB,cAACI,EAAD,KACG,SAAA1B,GAAS,IACAL,EAAaK,EAAbL,SAER,OACE0B,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,uBACbZ,EAAAjB,EAAAkB,cAAA,UACGjD,EAAS6D,UADZ,IACwB7D,EAAS8D,SAAU,IACzCd,EAAAjB,EAAAkB,cAAA,KACEc,QAAS7B,EAAKsB,YACdI,UAAU,6BAEZZ,EAAAjB,EAAAkB,cAAA,KACEc,QAAS7B,EAAKwB,cAAcM,KAAK9B,EAAMlC,EAASC,GAAIqB,GACpDsC,UAAU,2BAEZZ,EAAAjB,EAAAkB,cAACgB,EAAA,EAAD,CAAMC,GAAE,iBAAA/D,OAAmB+B,EAAKgB,MAAMlD,SAASC,KAC7C+C,EAAAjB,EAAAkB,cAAA,KACEW,UAAU,oBACVO,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPC,YAAa,YAMpBhB,EACCP,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,cACZZ,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,mBAAd,UAAwC5D,EAASwE,OACjDxB,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,mBAAd,UAAwC5D,EAASyE,OACjDzB,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,mBAAd,WAAyC5D,EAAS0E,SAElD,eA/DKtB,aCiBRuB,mLAtBX,OACE3B,EAAAjB,EAAAkB,cAACI,EAAD,KACG,SAAA1B,GAAS,IACA7B,EAAc6B,EAAd7B,UAGR,OAFA6C,QAAQC,IAAIjB,GAGVqB,EAAAjB,EAAAkB,cAACD,EAAAjB,EAAM6C,SAAP,KACE5B,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,kBACZZ,EAAAjB,EAAAkB,cAAA,QAAMW,UAAU,eAAhB,YADF,SAGC9D,EAAUO,IAAI,SAAAL,GAAQ,OACrBgD,EAAAjB,EAAAkB,cAAC4B,EAAD,CAAUnD,IAAK1B,EAASC,GAAID,SAAUA,gBAd9BoD,mBCGxB,SAAS0B,EAAO5B,GAAO,IACb6B,EAAa7B,EAAb6B,SACR,OACE/B,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,2DACbZ,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAAA,KAAG+B,KAAK,IAAIpB,UAAU,gBACnBmB,GAGH/B,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,sBACZZ,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,YACZZ,EAAAjB,EAAAkB,cAACgB,EAAA,EAAD,CAAMC,GAAG,IAAIN,UAAU,YACrBZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,eAAb,WAIJZ,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,YACZZ,EAAAjB,EAAAkB,cAACgB,EAAA,EAAD,CAAMC,GAAG,gBAAgBN,UAAU,YACjCZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,eAAb,mBAIJZ,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,YACZZ,EAAAjB,EAAAkB,cAACgB,EAAA,EAAD,CAAMC,GAAG,SAASN,UAAU,YAC1BZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,mBAAb,iBAYlBkB,EAAOG,aAAe,CACpBF,SAAU,UAQGD,QC1CAI,MAVf,WACE,OACElC,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,aAAd,0BACAZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,QAAb,kCACAZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,kBAAb,oCCHAuB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAC,EAMIF,EANJE,KACA3D,EAKIyD,EALJzD,MACA4D,EAIIH,EAJJG,YACA5F,EAGIyF,EAHJzF,KACA6F,EAEIJ,EAFJI,SACAC,EACIL,EADJK,MAEA,OACEzC,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,cACbZ,EAAAjB,EAAAkB,cAAA,SAAOyC,QAASJ,GAAOD,GACvBrC,EAAAjB,EAAAkB,cAAA,SACEtD,KAAMA,EACN2F,KAAMA,EACN1B,UAAW+B,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACb5D,MAAOA,EACP6D,SAAUA,IAEXC,GAASzC,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,oBAAoB6B,KAenDN,EAAeF,aAAe,CAC5BtF,KAAM,QAGOwF,QCwGAU,6MA5IbpG,MAAQ,CACNoE,UAAW,GACXC,SAAU,GACVU,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRoB,OAAQ,MAGVN,SAAW,SAAA/B,GAAC,OACVhD,EAAKc,SAAL3B,OAAAmG,EAAA,EAAAnG,CAAA,GACG6D,EAAEuC,OAAOV,KAAO7B,EAAEuC,OAAOrE,WAG9BsE,SAAW,SAAC3E,EAAUmC,GACpBA,EAAEyC,iBADwB,IAAAC,EAI4B1F,EAAKhB,MAAnDoE,EAJkBsC,EAIlBtC,UAAWC,EAJOqC,EAIPrC,SAAUU,EAJH2B,EAIG3B,MAAOC,EAJV0B,EAIU1B,MAAOC,EAJjByB,EAIiBzB,OAG3C,GAAkB,KAAdb,EAIJ,GAAiB,KAAbC,EAIJ,GAAc,KAAVU,EAIJ,GAAc,KAAVC,EAIJ,GAAe,KAAXC,EAAJ,CAKA,IAAM0B,EAAc,CAElBvC,YACAC,WACAU,QACAC,QACAC,UAIFnC,IAAM8D,KAAK,kCAAmCD,GAAa3D,KAAK,SAAAC,GAE9DpB,EAAS,CAAE3B,KAAM,eAAgBO,QAASwC,EAAKG,SAMjDpC,EAAKc,SAAS,CACZsC,UAAW,GACXC,SAAU,GACVU,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRoB,OAAQ,KAIVrF,EAAKyC,MAAMoD,QAAQC,KAAK,UAhCtB9F,EAAKc,SAAS,CAAEuE,OAAQ,CAAEpB,OAAQ,6BAJlCjE,EAAKc,SAAS,CAAEuE,OAAQ,CAAErB,MAAO,mCAJjChE,EAAKc,SAAS,CAAEuE,OAAQ,CAAEtB,MAAO,4BAJjC/D,EAAKc,SAAS,CAAEuE,OAAQ,CAAEhC,SAAU,gCAJpCrD,EAAKc,SAAS,CAAEuE,OAAQ,CAAEjC,UAAW,qGAmDhC,IAAA3B,EAAAvB,KAAA6F,EACuD7F,KAAKlB,MAA3DoE,EADD2C,EACC3C,UAAWC,EADZ0C,EACY1C,SAAUU,EADtBgC,EACsBhC,MAAOC,EAD7B+B,EAC6B/B,MAAOC,EADpC8B,EACoC9B,OAAQoB,EAD5CU,EAC4CV,OACnD,OACE9C,EAAAjB,EAAAkB,cAACI,EAAD,KACG,SAAA1B,GAAS,IACAL,EAAaK,EAAbL,SAER,OACE0B,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,eAAf,gBACAZ,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAAA,QAAMgD,SAAU/D,EAAK+D,SAASjC,KAAK9B,EAAMZ,IACvC0B,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,aACNC,KAAK,YACLC,YAAY,yBACZ5D,MAAOkC,EACP2B,SAAUtD,EAAKsD,SACfC,MAAOK,EAAOjC,YAEhBb,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,YACNC,KAAK,WACLC,YAAY,wBACZ5D,MAAOmC,EACP0B,SAAUtD,EAAKsD,SACfC,MAAOK,EAAOhC,WAEhBd,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,QACNC,KAAK,QACLC,YAAY,oBACZ5D,MAAO6C,EACPgB,SAAUtD,EAAKsD,SACfC,MAAOK,EAAOtB,QAEhBxB,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,QACNC,KAAK,QACLC,YAAY,yBACZ5D,MAAO8C,EACPe,SAAUtD,EAAKsD,SACfC,MAAOK,EAAOrB,QAEhBzB,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,SACNC,KAAK,SACLC,YAAY,4BACZ5D,MAAO+C,EACPc,SAAUtD,EAAKsD,SACfC,MAAOK,EAAOpB,SAEhB1B,EAAAjB,EAAAkB,cAAA,SACEtD,KAAK,SACLgC,MAAM,eACNiC,UAAU,wCAjIJR,aC0KXsD,6MAzKbjH,MAAQ,CACNoE,UAAW,GACXC,SAAU,GACVU,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRoB,OAAQ,MA2BVN,SAAW,SAAA/B,GAAC,OACVhD,EAAKc,SAAL3B,OAAAmG,EAAA,EAAAnG,CAAA,GACG6D,EAAEuC,OAAOV,KAAO7B,EAAEuC,OAAOrE,WAK9BsE,+CAAW,SAAAhE,EAAOX,EAAUmC,GAAjB,IAAA0C,EAAAtC,EAAAC,EAAAU,EAAAC,EAAAC,EAAAiC,EAAA1G,EAAA,OAAA6B,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTmB,EAAEyC,iBADOC,EAI6C1F,EAAKhB,MAAnDoE,EAJCsC,EAIDtC,UAAWC,EAJVqC,EAIUrC,SAAUU,EAJpB2B,EAIoB3B,MAAOC,EAJ3B0B,EAI2B1B,MAAOC,EAJlCyB,EAIkCzB,OAGzB,KAAdb,EAPK,CAAAzB,EAAAE,KAAA,eAQP7B,EAAKc,SAAS,CAAEuE,OAAQ,CAAEjC,UAAW,4BAR9BzB,EAAAwE,OAAA,oBAWQ,KAAb9C,EAXK,CAAA1B,EAAAE,KAAA,eAYP7B,EAAKc,SAAS,CAAEuE,OAAQ,CAAEhC,SAAU,2BAZ7B1B,EAAAwE,OAAA,oBAeK,KAAVpC,EAfK,CAAApC,EAAAE,KAAA,gBAgBP7B,EAAKc,SAAS,CAAEuE,OAAQ,CAAEtB,MAAO,uBAhB1BpC,EAAAwE,OAAA,qBAmBK,KAAVnC,EAnBK,CAAArC,EAAAE,KAAA,gBAoBP7B,EAAKc,SAAS,CAAEuE,OAAQ,CAAErB,MAAO,8BApB1BrC,EAAAwE,OAAA,qBAuBM,KAAXlC,EAvBK,CAAAtC,EAAAE,KAAA,gBAwBP7B,EAAKc,SAAS,CAAEuE,OAAQ,CAAEpB,OAAQ,wBAxB3BtC,EAAAwE,OAAA,kBA6BHD,EAAiB,CACrB9C,YACAC,WACAU,QACAC,QACAC,UAIMzE,EAAOQ,EAAKyC,MAAM2D,MAAMC,OAAxB7G,GAERsC,IACGwE,IADH,mCAAA5G,OAC0CF,GAAM0G,GAC7ClE,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAAKG,MACjBvB,EAAS,CAAE3B,KAAM,kBAAmBO,QAASwC,EAAKG,SAItDpC,EAAKc,SAAS,CACZsC,UAAW,GACXC,SAAU,GACVU,MAAO,GACPC,MAAO,GACPC,OAAQ,GACRoB,OAAQ,KAIVrF,EAAKyC,MAAMoD,QAAQC,KAAK,KACxBS,OAAOC,SAASC,SA3DP,yBAAA9E,EAAAW,SAAAd,6QA5BDhC,EAAOU,KAAKuC,MAAM2D,MAAMC,OAAxB7G,YAEWsC,IAChBC,IADgB,mCAAArC,OACuBF,IACvCwC,KAAK,SAAAC,GAGJ,IAAM1C,EAAW0C,EAAKG,KAEtBX,EAAKX,SAAS,CACZsC,UAAW7D,EAAS6D,UACpBC,SAAU9D,EAAS8D,SACnBU,MAAOxE,EAASwE,MAChBC,MAAOzE,EAASyE,MAChBC,OAAQ1E,EAAS0E,4JA4EhB,IAAAyC,EAAAxG,KAAA6F,EACuD7F,KAAKlB,MAA3DoE,EADD2C,EACC3C,UAAWC,EADZ0C,EACY1C,SAAUU,EADtBgC,EACsBhC,MAAOC,EAD7B+B,EAC6B/B,MAAOC,EADpC8B,EACoC9B,OAAQoB,EAD5CU,EAC4CV,OACnD,OACE9C,EAAAjB,EAAAkB,cAACI,EAAD,KACG,SAAA1B,GAAS,IACAL,EAAaK,EAAbL,SAER,OACE0B,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,eAAf,mBACAZ,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAAA,QAAMgD,SAAUkB,EAAKlB,SAASjC,KAAKmD,EAAM7F,IACvC0B,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,aACNC,KAAK,YACLC,YAAY,yBACZ5D,MAAOkC,EACP2B,SAAU2B,EAAK3B,SACfC,MAAOK,EAAOjC,YAEhBb,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,YACNC,KAAK,WACLC,YAAY,wBACZ5D,MAAOmC,EACP0B,SAAU2B,EAAK3B,SACfC,MAAOK,EAAOhC,WAEhBd,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,QACNC,KAAK,QACLC,YAAY,oBACZ5D,MAAO6C,EACPgB,SAAU2B,EAAK3B,SACfC,MAAOK,EAAOtB,QAEhBxB,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,QACNC,KAAK,QACLC,YAAY,yBACZ5D,MAAO8C,EACPe,SAAU2B,EAAK3B,SACfC,MAAOK,EAAOrB,QAEhBzB,EAAAjB,EAAAkB,cAACwD,EAAD,CACEpB,MAAM,SACNC,KAAK,SACLC,YAAY,4BACZ5D,MAAO+C,EACPc,SAAU2B,EAAK3B,SACfC,MAAOK,EAAOpB,SAEhB1B,EAAAjB,EAAAkB,cAAA,SACEtD,KAAK,SACLgC,MAAM,kBACNiC,UAAU,wCA9JHR,aCKZgE,MAXf,WACE,OACEpE,EAAAjB,EAAAkB,cAAA,WACED,EAAAjB,EAAAkB,cAAA,MAAIW,UAAU,aACZZ,EAAAjB,EAAAkB,cAAA,QAAMW,UAAU,eAAhB,OADF,mBAGAZ,EAAAjB,EAAAkB,cAAA,KAAGW,UAAU,QAAb,6CCmCSyD,mLAzBX,OACErE,EAAAjB,EAAAkB,cAACqE,EAAD,KACEtE,EAAAjB,EAAAkB,cAACgB,EAAA,EAAD,CAAQsD,SAAUC,iBAChBxE,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,OACbZ,EAAAjB,EAAAkB,cAACwE,EAAD,CAAQ1C,SAAS,qBACjB/B,EAAAjB,EAAAkB,cAAA,OAAKW,UAAU,aACbZ,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,KACE1E,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlD,IACjC3B,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBC,UAAWhC,IAC7C7C,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,qBACLC,UAAWnB,IAEb1D,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW3C,IACtClC,EAAAjB,EAAAkB,cAACyE,EAAA,EAAD,CAAOG,UAAWT,gBAjBhBhE,aCJE0E,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASlB,MACvB,2DCZNmB,IAASC,OAAOjF,EAAAjB,EAAAkB,cAACiF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9F,KAAK,SAAA+F,GACjCA,EAAaC","file":"static/js/main.218c141a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  // Evalue action types\n  switch (action.type) {\n    case \"DELETE_EMPLOYEE\":\n      return {\n        // Filters out the ID which is sent thru payload\n        ...state,\n        employees: state.employees.filter(\n          employee => employee.id !== action.payload\n        )\n      };\n    case \"ADD_EMPLOYEE\":\n      return {\n        // Return an object and the initial state\n        ...state,\n        employees: [action.payload, ...state.employees]\n      };\n    case \"EDIT_EMPLOYEE\":\n      return {\n        // Returns the initial state\n        // Matches params id to edit employee\n        ...state,\n        employees: state.employees.map(employee =>\n          employee.id === action.payload.id\n            ? (employee = action.payload)\n            : employee\n        )\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    employees: [],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const resp = await axios\n      .get(\"http://localhost:3000/employees\")\n      .then(resp => {\n        console.log(resp.data);\n        this.setState({\n          employees: resp.data\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// CSS\nimport \"./../css/employee.css\";\n\n// Components\nimport { Consumer } from \"../../Context\";\nimport axios from \"axios\";\n\nclass Employee extends Component {\n  state = {\n    showEmployeeInfo: false\n  };\n\n  onShowClick = e => {\n    // console.log(e.target);\n    this.setState({\n      showEmployeeInfo: !this.state.showEmployeeInfo\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    // dispatch({ type: \"DELETE_EMPLOYEE\", payload: id });\n    // Delete request to fake rest api\n    await axios.delete(`http://localhost:3000/employees/${id}`).then(resp => {\n      console.log(resp);\n      dispatch({ type: \"DELETE_EMPLOYEE\", payload: id });\n    });\n  };\n\n  render() {\n    console.log(this.props);\n    // console.log(this.state);\n    const { employee } = this.props;\n    const { showEmployeeInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {employee.firstName} {employee.lastName}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"showBtn fas fa-sort-down\"\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, employee.id, dispatch)}\n                  className=\"deleteBtn fas fa-times\"\n                />\n                <Link to={`employee/edit/${this.props.employee.id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n\n              {showEmployeeInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {employee.email}</li>\n                  <li className=\"list-group-item\">Phone: {employee.phone}</li>\n                  <li className=\"list-group-item\">Salary: {employee.salary}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// Prop Types\nEmployee.propTypes = {\n  employee: PropTypes.object.isRequired\n};\n\nexport default Employee;\n","import React, { Component } from \"react\";\nimport Employee from \"./Employee\";\nimport { Consumer } from \"../../Context\";\n\nclass Employees extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { employees } = value;\n          console.log(value);\n\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Employee</span> List\n              </h1>\n              {employees.map(employee => (\n                <Employee key={employee.id} employee={employee} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Employees;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\n// CSS\nimport \"./../css/header.css\";\n\nfunction Header(props) {\n  const { branding } = props;\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                  <i className=\"fas fa-home\"> Home</i>\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to=\"/employee/add\" className=\"nav-link\">\n                  <i className=\"fas fa-plus\"> Add Employee</i>\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to=\"/about\" className=\"nav-link\">\n                  <i className=\"fas fa-question\"> About</i>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\n// Default Props\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\n// Prop Types\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Employee Manager</h1>\n      <p className=\"lead\">Simple app to manage employees</p>\n      <p className=\"text-secondary\">1.0.0</p>\n    </div>\n  );\n}\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control from-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\n//Components\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass AddEmployee extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    salary: \"\",\n    errors: {}\n  };\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  onSubmit = (dispatch, e) => {\n    e.preventDefault();\n    // console.log(this.state);\n\n    const { firstName, lastName, email, phone, salary } = this.state;\n\n    // Check for errors\n    if (firstName === \"\") {\n      this.setState({ errors: { firstName: \"First name is required\" } });\n      return;\n    }\n    if (lastName === \"\") {\n      this.setState({ errors: { lastName: \"Last name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n    if (salary === \"\") {\n      this.setState({ errors: { salary: \"Salary is required\" } });\n      return;\n    }\n\n    const newEmployee = {\n      // id: uuid(),\n      firstName,\n      lastName,\n      email,\n      phone,\n      salary\n    };\n\n    // Post request to fake rest api\n    axios.post(\"http://localhost:3000/employees\", newEmployee).then(resp => {\n      // console.log(resp);\n      dispatch({ type: \"ADD_EMPLOYEE\", payload: resp.data });\n    });\n\n    // dispatch({ type: \"ADD_EMPLOYEE\", payload: newEmployee });\n\n    // Clear state once submitted\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      salary: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { firstName, lastName, email, phone, salary, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Employee</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    placeholder=\"What's the first name?\"\n                    value={firstName}\n                    onChange={this.onChange}\n                    error={errors.firstName}\n                  />\n                  <TextInputGroup\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    placeholder=\"What's the last name?\"\n                    value={lastName}\n                    onChange={this.onChange}\n                    error={errors.lastName}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"What's the email?\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Can I get that number?\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <TextInputGroup\n                    label=\"Salary\"\n                    name=\"salary\"\n                    placeholder=\"Dollar dollar bills ya'll\"\n                    value={salary}\n                    onChange={this.onChange}\n                    error={errors.salary}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Employee\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddEmployee;\n","import React, { Component } from \"react\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\n//Components\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass EditEmployee extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    phone: \"\",\n    salary: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    // Get ID from params\n    // console.log(this.props);\n    const { id } = this.props.match.params;\n\n    const resp = await axios\n      .get(`http://localhost:3000/employees/${id}`)\n      .then(resp => {\n        // console.log(resp);\n\n        const employee = resp.data;\n\n        this.setState({\n          firstName: employee.firstName,\n          lastName: employee.lastName,\n          email: employee.email,\n          phone: employee.phone,\n          salary: employee.salary\n        });\n      });\n  }\n\n  // Updates state from the form values\n\n  onChange = e =>\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n\n  // Form submit\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    // console.log(this.state);\n\n    const { firstName, lastName, email, phone, salary } = this.state;\n\n    // Check for errors\n    if (firstName === \"\") {\n      this.setState({ errors: { firstName: \"First name is required\" } });\n      return;\n    }\n    if (lastName === \"\") {\n      this.setState({ errors: { lastName: \"Last name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone number is required\" } });\n      return;\n    }\n    if (salary === \"\") {\n      this.setState({ errors: { salary: \"Salary is required\" } });\n      return;\n    }\n\n    // Create update object\n    const updateEmployee = {\n      firstName,\n      lastName,\n      email,\n      phone,\n      salary\n    };\n\n    // Put request, get ID from url\n    const { id } = this.props.match.params;\n\n    axios\n      .put(`http://localhost:3000/employees/${id}`, updateEmployee)\n      .then(resp => {\n        console.log(resp.data);\n        dispatch({ type: \"UPDATE_EMPLOYEE\", payload: resp.data });\n      });\n\n    // Clear state once submitted\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      salary: \"\",\n      errors: {}\n    });\n\n    // Redirect\n    this.props.history.push(\"/\");\n    window.location.reload();\n  };\n\n  render() {\n    const { firstName, lastName, email, phone, salary, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Update Employee</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    placeholder=\"What's the first name?\"\n                    value={firstName}\n                    onChange={this.onChange}\n                    error={errors.firstName}\n                  />\n                  <TextInputGroup\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    placeholder=\"What's the last name?\"\n                    value={lastName}\n                    onChange={this.onChange}\n                    error={errors.lastName}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"What's the email?\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Can I get that number?\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <TextInputGroup\n                    label=\"Salary\"\n                    name=\"salary\"\n                    placeholder=\"Dollar dollar bills ya'll\"\n                    value={salary}\n                    onChange={this.onChange}\n                    error={errors.salary}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Employee\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditEmployee;\n","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that pages does not exist... yet</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// CSS\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// Components\nimport Employees from \"./components/employees/Employees\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport AddEmployee from \"./components/employees/AddEmployee\";\nimport EditEmployee from \"./components/employees/EditEmployee\";\nimport NotFound from \"./components/pages/NotFound\";\nimport { Provider } from \"./Context\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header branding=\"Employee Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Employees} />\n                <Route exact path=\"/employee/add\" component={AddEmployee} />\n                <Route\n                  exact\n                  path=\"/employee/edit/:id\"\n                  component={EditEmployee}\n                />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}